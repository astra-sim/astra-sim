diff --git a/src/converter/text_converter.py b/src/converter/text_converter.py
index 1bad778..f28e123 100644
--- a/src/converter/text_converter.py
+++ b/src/converter/text_converter.py
@@ -104,7 +104,7 @@ class TextConverter:
     def get_comm_coll_node(self, layer_name: str, comm_type: str, comm_size: int) -> Any:
         node = self.get_node(f"COMM_COLL_NODE_{layer_name}_{comm_type}", COMM_COLL_NODE)
         node.attr.append(ChakraAttr(name="comm_type", int64_val=self.get_comm_type(comm_type)))
-        node.attr.append(ChakraAttr(name="comm_size", uint64_val=comm_size))
+        node.attr.append(ChakraAttr(name="comm_size", int64_val=comm_size))
         return node
 
     def add_parent(self, child_node: Any, parent_node: Any) -> None:
diff --git a/src/generator/generator.py b/src/generator/generator.py
index 036c16f..d1f547f 100644
--- a/src/generator/generator.py
+++ b/src/generator/generator.py
@@ -191,7 +191,7 @@ def generate_comm_coll_node(num_npus: int, comm_size: int, comm_type: int, node_
 
             node = get_node(node_name, COMM_COLL_NODE)
             node.attr.append(ChakraAttr(name="is_cpu_op", bool_val=False))
-            node.attr.extend([get_comm_type_attr(comm_type), ChakraAttr(name="comm_size", uint64_val=comm_size)])
+            node.attr.extend([get_comm_type_attr(comm_type), ChakraAttr(name="comm_size", int64_val=comm_size)])
             encode_message(et, node)
 
 
